apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      app: ${{values.component_id}}
      app.kubernetes.io/component: ${{values.component_id}}
      app.kubernetes.io/instance: ${{values.component_id}}
      app.kubernetes.io/name: ${{values.component_id}}
      backstage.io/kubernetes-id: ${{values.component_id}}
    name: ${{values.component_id}}
  spec:
    replicas: 1
    selector:
      matchLabels:
        deployment: ${{values.component_id}}
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          deployment: ${{values.component_id}}
          backstage.io/kubernetes-id: ${{values.component_id}}
      spec:
        containers:
        - image: ' '
          name: ${{values.component_id}}
          ports:
          - containerPort: ${{values.port}}
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
          resources: {}
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: ${{values.component_id}}
      app.kubernetes.io/component: ${{values.component_id}}
      app.kubernetes.io/instance: ${{values.component_id}}
      app.kubernetes.io/name: ${{values.component_id}}
      backstage.io/kubernetes-id: ${{values.component_id}}
    name: ${{values.component_id}}
  spec:
    ports:
    - name: ${{values.port}}-tcp
      port: ${{values.port}}
      protocol: TCP
      targetPort: ${{values.port}}
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    - name: 8778-tcp
      port: 8778
      protocol: TCP
      targetPort: 8778
    selector:
      deployment: ${{values.component_id}}
  status:
    loadBalancer: {}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    creationTimestamp: null
    labels:
      app: ${{values.component_id}}
      app.kubernetes.io/component: ${{values.component_id}}
      app.kubernetes.io/instance: ${{values.component_id}}
      app.kubernetes.io/name: ${{values.component_id}}
      backstage.io/kubernetes-id: ${{values.component_id}}
    name: ${{values.component_id}}
  spec:
    port:
      targetPort: ${{values.port}}-tcp
    to:
      kind: ""
      name: ${{values.component_id}}
      weight: null
  status: {}
kind: List
metadata: {}
